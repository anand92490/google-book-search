{"version":3,"sources":["components/Nav/index.js","components/Jumbotron/index.js","components/Grid/index.js","utils/API.js","components/SavedResult/index.js","pages/SaveBooks.js","components/SearchForm/index.js","components/SearchResult/index.js","pages/SearchBooks.js","pages/NoMatch.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","className","href","id","type","Jumbotron","_ref","children","Container","fluid","concat","Row","_ref2","Col","_ref3","size","split","map","join","API","getGoogleSearchBooks","query","axios","get","getBooks","getBook","DeleteBooks","delete","saveBook","bookData","post","SavedResult","props","savedBooks","length","savedbook","title","key","_id","src","image","alt","authors","description","onClick","handleDeleteButton","link","target","SaveBooks","state","deleteBook","then","res","_this","componentDidMount","catch","err","console","log","_this2","this","setState","data","components_Jumbotron","components_SavedResult","Component","SearchForm","value","search","name","placeholder","onChange","handleInputChange","handleFormSubmit","SearchResult","books","book","author","event","handleSavedButton","SearchBooks","error","message","preventDefault","items","Error","results","result","volumeInfo","imageLinks","thumbnail","infoLink","filter","alert","components_SearchForm","components_SearchResult","NoMatch","role","aria-label","App","react_router_dom","components_Nav","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2ac37666.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Nav(){\n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <a className=\"navbar-brand\" href=\"/\">\n                <h2 className=\"text-white\">Google Book Search</h2>\n            </a> \n            <div id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\" id=\"home\">\n                        <a className=\"nav-link\" href=\"/\">\n                            <button type=\"button\" className=\"btn btn-primary text-white\">Search Books</button>\n                        </a>\n                    </li>\n                    <li className=\"nav-item\" id=\"report\">\n                        <a className=\"nav-link\" href=\"/saved\">\n                            <button type=\"button\" className=\"btn btn-success text-white\">Saved Books</button>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default Nav;","import React from 'react'\nimport \"./style.css\";\n\nfunction Jumbotron({ children }){\n    return (\n        <div className=\"jumbotron jumbotron-fluid d-flex align-items-center\">\n            <div className=\"container text-center\">\n                {children}\n            </div>\n        </div>\n    );\n}\n\nexport default Jumbotron;","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nexport default {\n  // Get the book from the google Books api\n  getGoogleSearchBooks: function(query){\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query)\n  },\n\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  //Deletes the book with given id\n  DeleteBooks: function(id) {\n    return axios.delete(\"/api/books\" + id)\n  },\n  //Saves a book to the database\n  saveBook: function(bookData){\n      return axios.post(\"api/books\", bookData)\n  }\n};","import React from \"react\";\nimport \"./style.css\"\nimport { Row, Col } from \"../Grid\"\n\nconst SavedResult = props => {\n    return (props.savedBooks.length === 0) ? (\n        <div className=\"card\">\n            <div className=\"card-body player\">\n                <div className=\"article\">\n                    <h3>Books that You Saved</h3>\n                </div>\n            </div>\n        </div>\n    ) : (\n            <div className=\"card\">\n                <div className=\"card-body player\">\n                    <div className=\"article\">\n                        <h3>Books that You Saved</h3>\n                        {props.savedBooks.map(savedbook => {\n                            return (\n                                <li className=\"saved-list list-group-item\">\n                                    <Row className=\"SearchResult\" id={savedbook.title + \"Card\"} key={savedbook._id}>\n                                        {/* col-3 show image of the book */}\n                                        <Col size=\"2\" className=\"bookImage\">\n                                            <img src={savedbook.image} alt={savedbook.title} />\n                                        </Col>\n                                        <Col size=\"1\" className=\"emptyCol\" />\n                                        {/* col-9 show information of the book */}\n                                        <Col size=\"9\" className=\"bookInfo\">\n                                            <Row>\n                                                <h2 className=\"bookTitle\">{savedbook.title}</h2>\n                                            </Row>\n                                            <Row>\n                                                <h3 className=\"bookAuthor\">{savedbook.authors}</h3>\n                                            </Row>\n                                            <Row>\n                                                <p className=\"bookDescription\">{savedbook.description}</p>\n                                            </Row>\n                                        </Col>\n                                    </Row>\n                                    <br></br>\n                                    <Row className=\"buttonDiv \">\n                                        <button className=\"deleteBook btn btn-danger\" id={savedbook._id} onClick={() => props.handleDeleteButton(savedbook._id)}>\n                                            Delete Book\n                                        </button>\n                                        <a href={savedbook.link} target=\"_blank\">\n                                            <button className=\"viewBook btn btn-success\">\n                                                View Book\n                                            </button>\n                                        </a>\n                                    </Row>\n                                </li>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n}\nexport default SavedResult","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container } from \"../components/Grid\";\nimport API from '../utils/API';\nimport SavedResult from '../components/SavedResult';\n\nclass SaveBooks extends Component {\n  state = {\n    savedBooks: []\n  };\n\n  //when this component mounts, grab all books that were save to the database \n  componentDidMount() {\n    API.getBooks()\n        .then(res => this.setState({ savedBooks: res.data }))\n        .catch(err => console.log(err))\n}\n\n//function to remove book by id\nhandleDeleteButton = id => {\n    API.deleteBook(id)\n        .then(res => this.componentDidMount())\n        .catch(err => console.log(err))\n}\n\n  render() {\n    return (\n      <Container fluid className=\"container\">\n        <Jumbotron />\n        <Container>\n          <SavedResult\n            savedBooks={this.state.savedBooks}\n            handleDeleteButton={this.handleDeleteButton}\n          />\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default SaveBooks;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst SearchForm = props => {\n    return (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"BookSearchLabel\">\n                    <h3>Search For Book</h3>\n                </label>\n                <br></br>\n                <input\n                    className=\"col-12 form-control\"\n                    value={props.search}\n                    type=\"text\"\n                    name=\"searchBook\"\n                    placeholder=\"Enter Book's Name\"\n                    onChange={props.handleInputChange}\n                />\n            </div>\n            <button\n                type=\"submit\"\n                className=\"submitBtn btn btn-primary\"\n                onClick={props.handleFormSubmit}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default SearchForm;\n","import React from \"react\";\nimport \"./style.css\";\nimport { Row, Col } from \"../Grid\"\n\nconst SearchResult = props => {\n    return (props.books.length === 0) ? (\n        <div className=\"card\">\n            <div className=\"card-body player\">\n                <div className=\"article\">\n                    <h3>Search Results</h3>\n                </div>\n            </div>\n        </div>\n    ) : (\n            <div className=\"card\">\n                <div className=\"card-body player\">\n                    <div className=\"article\">\n                        <h3>Search Results</h3>\n                        {props.books.map(book => {\n                            return (\n                                <li className=\"search-list list-group-item\">\n                                    <Row className=\"SearchResult row\" id={book.title + \"Card\"} key={book._id}>\n                                        {/* col-3 show image of the book */}\n                                        <Col size=\"2\" className=\"bookImage\">\n                                            <img src={book.image} alt={book.title} />\n                                        </Col>\n                                        <Col size=\"1\" className=\"emptyCol\" />\n                                        {/* col-9 show information of the book */}\n                                        <Col size=\"9\" className=\"bookInfo\">\n                                            <Row>\n                                                <h3 className=\"bookTitle\">{book.title}</h3>\n                                            </Row>\n                                            <Row>\n                                                <h4 className=\"bookAuthor\">{book.author}</h4>\n                                            </Row>\n                                            <Row>\n                                                <p className=\"bookDescription\">{book.description}</p>\n                                            </Row>\n                                        </Col>\n                                    </Row>\n                                    <br></br>\n                                    <Row className=\"buttonDiv\">\n                                        <button className=\"saveBook btn btn-primary\" id={book.id} onClick={(event) => props.handleSavedButton(event)}>\n                                            Save Book\n                                        </button>\n                                        <a href={book.link} target=\"_blank\">\n                                            <button className=\"viewBook btn btn-info\">\n                                                View Book\n                                            </button>\n                                        </a>\n                                    </Row>\n                                </li>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n}\nexport default SearchResult","import React, { Component } from \"react\";\nimport API from '../utils/API'\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResult from \"../components/SearchResult\";\n\nclass SearchBooks extends Component {\n    state = {\n        search: \"\",\n        books: [],\n        author: \"\",\n        error: \"\",\n        message: \"\"\n    };\n\n    //function to take value on the search bar input\n    handleInputChange = event => {\n        this.setState({ search: event.target.value });\n    };\n\n    //function for submit button to trigger the value of the search form\n    handleFormSubmit = event => {\n        event.preventDefault();\n        // once it clicks it connects to the google book api with the search value\n        API.getGoogleSearchBooks(this.state.search)\n            .then(res => {\n                if (res.data.items === \"error\") {\n                    throw new Error(res.data.items);\n                } else {\n                    // store response in a array\n                    let results = res.data.items;\n                    //map through the array\n                    results = results.map(result => {\n                        //store each book information in a new object\n                        result = {\n                            key: result.id,\n                            id: result.id,\n                            title: result.volumeInfo.title,\n                            author: result.volumeInfo.authors,\n                            description: result.volumeInfo.description,\n                            image: result.volumeInfo.imageLinks.thumbnail,\n                            link: result.volumeInfo.infoLink\n                        };\n                        return result;\n                    });\n                    // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\n                    this.setState({ books: results, error: \"\" });\n                }\n            })\n            .catch(err => this.setState({ error: err.items }));\n    };\n\n    //function to save the books\n    handleSavedButton = event => {\n        //console.log(event)\n        event.preventDefault();\n        console.log(this.state.books);\n        let savedBooks = this.state.books.filter(book => book.id === event.target.id)\n        savedBooks = savedBooks[0];\n        API.saveBook(savedBooks)\n            .then(this.setState({ message: alert(\"Your book is saved\") }))\n            .catch(err => console.log(err))\n    };\n\n    render() {\n        return (\n            <Container fluid>\n                <Jumbotron>\n                    <h1 className=\"text-white\">(React) Google Books Search</h1>\n                    <h3 className=\"text-white\">Search for and Save Books of Interest</h3>\n                </Jumbotron>\n                <Container>\n                    <Row>\n                        <Col size=\"12\">\n                            <SearchForm\n                                handleFormSubmit={this.handleFormSubmit}\n                                handleInputChange={this.handleInputChange}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n                <br></br>\n                <Container>\n                    <SearchResult\n                        books={this.state.books}\n                        handleSavedButton={this.handleSavedButton}\n                    />\n                </Container>\n            </Container>\n        );\n    }\n}\n\nexport default SearchBooks;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport SaveBooks from \"./pages/SaveBooks\";\nimport SearchBooks from \"./pages/SearchBooks\";\nimport NoMatch from \"./pages/NoMatch\"\nimport \"./App.css\";\n\nfunction App() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={SearchBooks} />\n            <Route exact path=\"/saved\" component={SaveBooks} />\n            <Route exact path=\"/saved/:id\" component={SaveBooks}/>\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}